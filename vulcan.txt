
_G.Morph = "Vulcan"
local StrToNumber=tonumber;local Byte=string.byte;local Char=string.char;local Sub=string.sub;local Subg=string.gsub;local Rep=string.rep;local Concat=table.concat;local Insert=table.insert;local LDExp=math.ldexp;local GetFEnv=getfenv or function()return _ENV;end ;local Setmetatable=setmetatable;local PCall=pcall;local Select=select;local Unpack=unpack or table.unpack ;local ToNumber=tonumber;local function VMCall(ByteString,vmenv,...)local DIP=1;local repeatNext;ByteString=Subg(Sub(ByteString,5),"..",function(byte)if (Byte(byte,2)==79) then repeatNext=StrToNumber(Sub(byte,1,1));return "";else local a=Char(StrToNumber(byte,16));if repeatNext then local b=Rep(a,repeatNext);repeatNext=nil;return b;else return a;end end end);local function gBit(Bit,Start,End)if End then local Res=(Bit/(2^(Start-1)))%(2^(((End-1) -(Start-1)) + 1)) ;return Res-(Res%1) ;else local Plc=2^(Start-1) ;return (((Bit%(Plc + Plc))>=Plc) and 1) or 0 ;end end local function gBits8()local a=Byte(ByteString,DIP,DIP);DIP=DIP + 1 ;return a;end local function gBits16()local a,b=Byte(ByteString,DIP,DIP + 2 );DIP=DIP + 2 ;return (b * 256) + a ;end local function gBits32()local a,b,c,d=Byte(ByteString,DIP,DIP + 3 );DIP=DIP + 4 ;return (d * 16777216) + (c * 65536) + (b * 256) + a ;end local function gFloat()local Left=gBits32();local Right=gBits32();local IsNormal=1;local Mantissa=(gBit(Right,1,20) * (2^32)) + Left ;local Exponent=gBit(Right,21,31);local Sign=((gBit(Right,32)==1) and  -1) or 1 ;if (Exponent==0) then if (Mantissa==0) then return Sign * 0 ;else Exponent=1;IsNormal=0;end elseif (Exponent==2047) then return ((Mantissa==0) and (Sign * (1/0))) or (Sign * NaN) ;end return LDExp(Sign,Exponent-1023 ) * (IsNormal + (Mantissa/(2^52))) ;end local function gString(Len)local Str;if  not Len then Len=gBits32();if (Len==0) then return "";end end Str=Sub(ByteString,DIP,(DIP + Len) -1 );DIP=DIP + Len ;local FStr={};for Idx=1, #Str do FStr[Idx]=Char(Byte(Sub(Str,Idx,Idx)));end return Concat(FStr);end local gInt=gBits32;local function _R(...)return {...},Select("#",...);end local function Deserialize()local Instrs={};local Functions={};local Lines={};local Chunk={Instrs,Functions,nil,Lines};local ConstCount=gBits32();local Consts={};for Idx=1,ConstCount do local Type=gBits8();local Cons;if (Type==1) then Cons=gBits8()~=0 ;elseif (Type==2) then Cons=gFloat();elseif (Type==3) then Cons=gString();end Consts[Idx]=Cons;end Chunk[3]=gBits8();for Idx=1,gBits32() do local Descriptor=gBits8();if (gBit(Descriptor,1,1)==0) then local Type=gBit(Descriptor,2,3);local Mask=gBit(Descriptor,4,6);local Inst={gBits16(),gBits16(),nil,nil};if (Type==0) then Inst[3]=gBits16();Inst[4]=gBits16();elseif (Type==1) then Inst[3]=gBits32();elseif (Type==2) then Inst[3]=gBits32() -(2^16) ;elseif (Type==3) then Inst[3]=gBits32() -(2^16) ;Inst[4]=gBits16();end if (gBit(Mask,1,1)==1) then Inst[2]=Consts[Inst[2]];end if (gBit(Mask,2,2)==1) then Inst[3]=Consts[Inst[3]];end if (gBit(Mask,3,3)==1) then Inst[4]=Consts[Inst[4]];end Instrs[Idx]=Inst;end end for Idx=1,gBits32() do Functions[Idx-1 ]=Deserialize();end for Idx=1,gBits32() do Lines[Idx]=gBits32();end return Chunk;end local function Wrap(Chunk,Upvalues,Env)local Instr=Chunk[1];local Proto=Chunk[2];local Params=Chunk[3];return function(...)local VIP=1;local Top= -1;local Args={...};local PCount=Select("#",...) -1 ;local function Loop()local Instr=Instr;local Proto=Proto;local Params=Params;local _R=_R;local Vararg={};local Lupvals={};local Stk={};for Idx=0,PCount do if (Idx>=Params) then Vararg[Idx-Params ]=Args[Idx + 1 ];else Stk[Idx]=Args[Idx + 1 ];end end local Varargsz=(PCount-Params) + 1 ;local Inst;local Enum;while true do Inst=Instr[VIP];Enum=Inst[1];if (Enum<=14) then if (Enum<=6) then if (Enum<=2) then if (Enum<=0) then for Idx=Inst[2],Inst[3] do Stk[Idx]=nil;end elseif (Enum>1) then Stk[Inst[2]]=Env[Inst[3]];else Stk[Inst[2]][Inst[3]]=Inst[4];end elseif (Enum<=4) then if (Enum==3) then local A=Inst[2];local C=Inst[4];local CB=A + 2 ;local Result={Stk[A](Stk[A + 1 ],Stk[CB])};for Idx=1,C do Stk[CB + Idx ]=Result[Idx];end local R=Result[1];if R then Stk[CB]=R;VIP=Inst[3];else VIP=VIP + 1 ;end elseif (Stk[Inst[2]]~=Stk[Inst[4]]) then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum>5) then local A=Inst[2];local Results,Limit=_R(Stk[A](Stk[A + 1 ]));Top=(Limit + A) -1 ;local Edx=0;for Idx=A,Top do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end else Stk[Inst[2]]=Stk[Inst[3]][Stk[Inst[4]]];end elseif (Enum<=10) then if (Enum<=8) then if (Enum>7) then local NewProto=Proto[Inst[3]];local NewUvals;local Indexes={};NewUvals=Setmetatable({},{__index=function(_,Key)local Val=Indexes[Key];return Val[1][Val[2]];end,__newindex=function(_,Key,Value)local Val=Indexes[Key];Val[1][Val[2]]=Value;end});for Idx=1,Inst[4] do VIP=VIP + 1 ;local Mvm=Instr[VIP];if (Mvm[1]==15) then Indexes[Idx-1 ]={Stk,Mvm[3]};else Indexes[Idx-1 ]={Upvalues,Mvm[3]};end Lupvals[ #Lupvals + 1 ]=Indexes;end Stk[Inst[2]]=Wrap(NewProto,NewUvals,Env);else VIP=Inst[3];end elseif (Enum==9) then local A=Inst[2];local B=Stk[Inst[3]];Stk[A + 1 ]=B;Stk[A]=B[Inst[4]];elseif  not Stk[Inst[2]] then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum<=12) then if (Enum>11) then if (Stk[Inst[2]]==Inst[4]) then VIP=VIP + 1 ;else VIP=Inst[3];end else Stk[Inst[2]]=Upvalues[Inst[3]];end elseif (Enum>13) then if (Stk[Inst[2]]~=Inst[4]) then VIP=VIP + 1 ;else VIP=Inst[3];end else local A=Inst[2];Stk[A]=Stk[A](Stk[A + 1 ]);end elseif (Enum<=22) then if (Enum<=18) then if (Enum<=16) then if (Enum==15) then Stk[Inst[2]]=Stk[Inst[3]];else local A=Inst[2];local Cls={};for Idx=1, #Lupvals do local List=Lupvals[Idx];for Idz=0, #List do local Upv=List[Idz];local NStk=Upv[1];local DIP=Upv[2];if ((NStk==Stk) and (DIP>=A)) then Cls[DIP]=NStk[DIP];Upv[1]=Cls;end end end end elseif (Enum==17) then local A=Inst[2];Stk[A]=Stk[A](Unpack(Stk,A + 1 ,Inst[3]));elseif Stk[Inst[2]] then VIP=VIP + 1 ;else VIP=Inst[3];end elseif (Enum<=20) then if (Enum==19) then Stk[Inst[2]]=Stk[Inst[3]][Inst[4]];else Stk[Inst[2]]=Stk[Inst[3]] * Stk[Inst[4]] ;end elseif (Enum==21) then Stk[Inst[2]]=Inst[3]~=0 ;else Stk[Inst[2]][Inst[3]]=Stk[Inst[4]];end elseif (Enum<=26) then if (Enum<=24) then if (Enum==23) then Stk[Inst[2]]=Wrap(Proto[Inst[3]],nil,Env);else local A=Inst[2];local Results={Stk[A](Unpack(Stk,A + 1 ,Top))};local Edx=0;for Idx=A,Inst[4] do Edx=Edx + 1 ;Stk[Idx]=Results[Edx];end end elseif (Enum>25) then local A=Inst[2];Stk[A](Stk[A + 1 ]);else local B=Inst[3];local K=Stk[B];for Idx=B + 1 ,Inst[4] do K=K   .. Stk[Idx] ;end Stk[Inst[2]]=K;end elseif (Enum<=28) then if (Enum>27) then Stk[Inst[2]]=Inst[3];else do return;end end elseif (Enum==29) then if (Stk[Inst[2]]==Stk[Inst[4]]) then VIP=VIP + 1 ;else VIP=Inst[3];end else local A=Inst[2];Stk[A](Unpack(Stk,A + 1 ,Inst[3]));end VIP=VIP + 1 ;end end A,B=_R(PCall(Loop));if  not A[1] then local line=Chunk[4][VIP] or "?" ;error("Script error at ["   .. line   .. "]:"   .. A[2] );else return Unpack(A,2,B);end end;end return Wrap(Deserialize(),{},vmenv)(...);end VMCalletFEnv(),...);

local DragonText = "Vulcan"
local DragonColor = Color3.fromRGB(255, 10, 65)
local DragonSequence = ColorSequence.new({ColorSequenceKeypoint.new(0, DragonColor), ColorSequenceKeypoint.new(1, DragonColor)})

local rushstyle = game.ReplicatedStorage.Styles.Rush

local plr = game.Players.LocalPlayer
local pgui = plr.PlayerGui
local interf = pgui.Interface
local bt = interf.Battle
local main = bt.Main
local status = plr.Status

local function sendNotification(text, color)
	if not color then color = Color3.new(1, 1, 1) end
	pgui.Notify.Awards.ChildAdded:Once(function(c)
		if c.Text == text then
			c.TextColor3 = color
			coroutine.wrap(function()
				local con;
				con = game:GetService("RunService").RenderStepped:Connect(function()
					if not c then
						con:Disconnect()
						return
					end
					c.TextColor3 = color
				end)()
			end)()
		end
	end)
	pgui["नोटिफ"]:Fire(text)
end

for i,v in pairs(game.ReplicatedStorage.Styles.Rush:GetChildren()) do
	if v:IsA("Animation") and v.Name:find("Evade") then
		v.AnimationId = "rbxassetid://"
	end
end

function isInBattle()
	return (plr:FindFirstChild("InBattle") and true or false)
end

function isDungeon()
	return game.ReplicatedStorage.Dungeon.Value
end

function doingHact()
	return (plr.Character:FindFirstChild("Heated") and true or false)
end

function showMaxHeatEffect()
	return (isInBattle() and not doingHact() and plr.Status.Heat.Value >= 100) and true or false
end

function hasWeaponInHand()
	return (plr.Character:FindFirstChild("Holding") and true or false)
end

local function changeValueStrict(obj, valName, newVal, valClass)
	if obj and newVal and valName then
		if not obj:FindFirstChild(valName) then
			local n = Instance.new(valClass)
			n.Name = valName
			n.Parent = obj
		end
		obj[valName].Value = newVal
	end
end

local moves = game.ReplicatedStorage.Moves
local stylesR = game.ReplicatedStorage.Styles.Rush




local function update()
	local char = plr.Character or plr.CharacterAdded:Wait()
	char.HumanoidRootPart.Fire_Main.Color = DragonSequence
	char.HumanoidRootPart.Fire_Secondary.Color = DragonSequence
	char.HumanoidRootPart.Fire_Main.Rate = status.Heat.Value >= 100 and 115 or status.Heat.Value >= 75 and 85 or 80
	char.HumanoidRootPart.Fire_Secondary.Rate = status.Heat.Value >= 100 and 90 or status.Heat.Value >= 75 and 80 or 70
	char.HumanoidRootPart.Lines1.Color = DragonSequence
	char.HumanoidRootPart.Lines1.Rate = status.Heat.Value >= 100 and 60 or status.Heat.Value >= 75 and 40 or 20
	char.HumanoidRootPart.Lines2.Color = DragonSequence
	char.HumanoidRootPart.Lines2.Rate = status.Heat.Value >= 100 and 60 or status.Heat.Value >= 75 and 40 or 20
	char.HumanoidRootPart.Sparks.Color = DragonSequence
	if not char.HumanoidRootPart.TimeFor.Enabled then
		char.HumanoidRootPart.TimeFor.Color = DragonSequence
	end

	char.UpperTorso["r2f_aura_burst"].Lines1.Color = DragonSequence
	char.UpperTorso["r2f_aura_burst"].Lines2.Color = DragonSequence
	char.UpperTorso["r2f_aura_burst"].Flare.Color = DragonSequence
	char.UpperTorso["r2f_aura_burst"].Lines1.Enabled = showMaxHeatEffect()
	char.UpperTorso["r2f_aura_burst"].Flare.Enabled = showMaxHeatEffect()
	char.UpperTorso["r2f_aura_burst"].Smoke.Color = DragonSequence
	char.UpperTorso.Evading.Color = DragonSequence
end

update()

rushstyle.VisualName.Value = DragonText
rushstyle.Color.Value = DragonColor
print(rushstyle.VisualName.Value)

if status.Style.Value == "Rush" then
	main.XP.Fill.ImageColor3 = DragonColor
end

status.Heat.Changed:Connect(function()
	update()
end)

status.Style.Changed:Connect(function()
	if status.Style.Value == "Rush" then
		main.XP.Fill.ImageColor3 = DragonColor
	end
end)

loadstring(game:HttpGet("https://raw.githubusercontent.com/BYONN/R2FMods/69cc758eba2b024e3de511f6bd48b6e5afdb1351/charvoicemod.lua"))() 


getfenv().Activated = true



if game.ReplicatedStorage.Styles.Rush:FindFirstChild("2Strike2") then
	v = game.ReplicatedStorage.Styles.Rush["2Strike2"]
else
	v = Instance.new("StringValue", game.ReplicatedStorage.Styles.Rush)
end
v.Value = '龍2Strike1'
v.Name = "2Strike2"
if game.ReplicatedStorage.Styles.Rush:FindFirstChild("2Strike5") then
	v = game.ReplicatedStorage.Styles.Rush["2Strike5"]
else
	v = Instance.new("StringValue", game.ReplicatedStorage.Styles.Rush)
end
v.Value = '龍2Strike4'
v.Name = "2Strike5"
if game.ReplicatedStorage.Styles.Rush:FindFirstChild("2Strike3") then
	v = game.ReplicatedStorage.Styles.Rush["2Strike3"]
else
	v = Instance.new("StringValue", game.ReplicatedStorage.Styles.Rush)
end
v.Value = '龍2Strike2'
v.Name = "2Strike3"
if game.ReplicatedStorage.Styles.Rush:FindFirstChild("2Strike4") then
	v = game.ReplicatedStorage.Styles.Rush["2Strike4"]
else
	v = Instance.new("StringValue", game.ReplicatedStorage.Styles.Rush)
end
v.Value = '龍2Strike3'
v.Name = "2Strike4"
if game.ReplicatedStorage.Styles.Rush:FindFirstChild("DoubleBlows") then
	v = game.ReplicatedStorage.Styles.Rush["DoubleBlows"]
else
	v = Instance.new("Folder", game.ReplicatedStorage.Styles.Rush)
end
v.Name = "DoubleBlows"
if game.ReplicatedStorage.Styles.Rush.DoubleBlows:FindFirstChild("Ability") then
	v = game.ReplicatedStorage.Styles.Rush.DoubleBlows["Ability"]
else
	v = Instance.new("StringValue", game.ReplicatedStorage.Styles.Rush.DoubleBlows)
end
v.Value = 'Double Finishing Blow'



current = moves["BAttack1"]
changeValueStrict(current, "HitDur", 10, "NumberValue")
changeValueStrict(current, "MoveDuration", 1.1, "NumberValue")
changeValueStrict(current, "AniSpeed", 1.1, "NumberValue")
changeValueStrict(current, "Dmg", 10, "NumberValue")

current = moves["BAttack2"]
changeValueStrict(current, "HitDur", 10, "NumberValue")
changeValueStrict(current, "MoveDuration", 1.1, "NumberValue")
changeValueStrict(current, "AniSpeed", 1.1, "NumberValue")
changeValueStrict(current, "Dmg", 10, "NumberValue")


if game.ReplicatedStorage.Styles.Rush:FindFirstChild("Grab") then
	v = game.ReplicatedStorage.Styles.Rush["Grab"]
else
	v = Instance.new("StringValue", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'GGrab'
v.Name = "Grab"


if game.ReplicatedStorage.Styles.Rush:FindFirstChild("GrabCorpses") then
	v = game.ReplicatedStorage.Styles.Rush["GrabCorpses"]
else
	v = Instance.new("Folder", game.ReplicatedStorage.Styles.Rush)
end
v.Name = "GrabCorpses"


if game.ReplicatedStorage.Styles.Rush:FindFirstChild("Throw") then
	v = game.ReplicatedStorage.Styles.Rush["Throw"]
else
	v = Instance.new("StringValue", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'T_BrawlerToss'
v.Name = "Throw"


if game.ReplicatedStorage.Styles.Rush:FindFirstChild("StrikeThrow") then
	v = game.ReplicatedStorage.Styles.Rush["StrikeThrow"]
else
	v = Instance.new("StringValue", game.ReplicatedStorage.Styles.Rush)
end
v.Value = 'T_HeavyToss'
v.Name = "StrikeThrow"


if game.ReplicatedStorage.Styles.Brawler:FindFirstChild("StrikeThrow") then
	v = game.ReplicatedStorage.Styles.Brawler["StrikeThrow"]
else
	v = Instance.new("StringValue", game.ReplicatedStorage.Styles.Brawler)
end
v.Value = 'T_FinishingHold'
v.Name = "StrikeThrow"
if game.ReplicatedStorage.Styles.Brawler.StrikeThrow:FindFirstChild("Ability") then
	v = game.ReplicatedStorage.Styles.Brawler.StrikeThrow["Ability"]
else
	v = Instance.new("StringValue", game.ReplicatedStorage.Styles.Brawler.StrikeThrow)
end
v.Value = 'Finishing Hold'
v.Name = "Ability"


game.ReplicatedStorage.Styles.Rush.Taunt.Value = "GoonTaunt" 




game.ReplicatedStorage.Styles.Rush.Rush1.Value = "BAttack1"
game.ReplicatedStorage.Styles.Rush.Rush2.Value = "BAttack2"
game.ReplicatedStorage.Styles.Rush.Rush3.Value = "BAttack1"
game.ReplicatedStorage.Styles.Rush.Rush4.Value = "BAttack2"
game.ReplicatedStorage.Styles.Rush.Rush5.Value = "BAttack1"
game.ReplicatedStorage.Styles.Rush.Rush6.Value = "BAttack2"
game.ReplicatedStorage.Styles.Rush.Rush7.Value = "BAttack1"
game.ReplicatedStorage.Styles.Rush.Rush8.Value = "BAttack3"


game.ReplicatedStorage.Styles.Rush.Strike1.Value = "BStrike1"
game.ReplicatedStorage.Styles.Rush.Strike2.Value = "BStrike2"
game.ReplicatedStorage.Styles.Rush.Strike3.Value = "BStrike3"
game.ReplicatedStorage.Styles.Rush.Strike4.Value = "BStrike4"
game.ReplicatedStorage.Styles.Rush.Strike5.Value = "BStrike2"
game.ReplicatedStorage.Styles.Rush.Strike6.Value = "BStrike2"
game.ReplicatedStorage.Styles.Rush.Strike7.Value = "BStrike3"
game.ReplicatedStorage.Styles.Rush.Strike8.Value = "BStrike4"
game.ReplicatedStorage.Styles.Rush.Strike9.Value = "BStrike4"

game.ReplicatedStorage.Styles.Rush.Speed.Value = 1.7